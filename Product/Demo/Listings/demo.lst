C51 COMPILER V9.54   DEMO                                                                  09/18/2016 22:38:18 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE DEMO
OBJECT MODULE PLACED IN .\Objects\demo.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Code\demo.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\..\Include) DEFINE(FOSC_2
                    -21184) DEBUG OBJECTEXTEND PRINT(.\Listings\demo.lst) TABS(2) OBJECT(.\Objects\demo.obj)

line level    source

   1          /******************************************************************************/
   2          /*                                                                            */
   3          /*                   RTX_EX1.C:  The first RTX-51 Program                     */
   4          /*                                                                            */
   5          /******************************************************************************/
   6          
   7          #include <stdio.h>
   8          #include <rtx51tny.h>                 /* RTX-51 tiny functions & defines      */
   9          #include "N76E885.h"
  10          #include "Version.h"
  11          #include "Typedef.h"
  12          #include "Define.h"
  13          #include "Common.h"
  14          #include "SFR_Macro.h"
  15          #include "Delay.h"
  16          #include "Semaphore.h"
  17          
  18          #include "demo.h"                    /* project specific header file */
  19          
  20          bit BIT_TMP;
  21          
  22          void demo_init(void)
  23          {
  24   1          /* Note
  25   1             MCU power on system clock is HIRC (22.1184MHz), so Fsys = 22.1184MHz
  26   1          */
  27   1          Set_All_GPIO_Quasi_Mode();
  28   1          InitialUART0_Timer1_Type2(9600);                            /* 9600 Baud Rate*/
  29   1      
  30   1          Show_FW_Version_Number_To_PC();
  31   1      
  32   1          printf ("\n*===================================================================");
  33   1          printf ("\n*  Name: N76E885 demo.c in UART0 Demo Code.");
  34   1          printf ("\n*===================================================================\n");  
  35   1      }
  36          
  37          /******************************************************************************/
  38          /*       Task 0 'init': Initialize                                            */
  39          /******************************************************************************/
  40          void startup_task (void) _task_ STARTUP_TASK 
  41          {    
  42   1          demo_init();
  43   1        
  44   1          init_semaphore(0, 1, 1);  
  45   1        
  46   1          os_create_task (PHASE1);            /* start task PHASE1                    */
  47   1          os_create_task (PHASE2);            /* start task PHASE2                    */
  48   1          os_delete_task (STARTUP_TASK);      /* stop init task (no longer needed)    */
  49   1      }
  50          
  51          /******************************************************************************/
  52          /*    Task 1 'phase1':                                                        */
  53          /******************************************************************************/
  54          void phase1 (void) _task_  PHASE1 
C51 COMPILER V9.54   DEMO                                                                  09/18/2016 22:38:18 PAGE 2   

  55          {
  56   1          while (1)  
  57   1          {                               /* endless loop */
  58   2              pend_semaphore(0);
  59   2              printf ("TASK # %d\n", (int)os_running_task_id ());  
  60   2              release_semaphore(0);
  61   2          }
  62   1      }
  63          
  64          /******************************************************************************/
  65          /*    Task 2 'phase2':                                                        */
  66          /******************************************************************************/
  67          void phase2 () _task_ PHASE2 
  68          {
  69   1          while (1)
  70   1          {                               /* endless loop */   
  71   2              pend_semaphore(0);
  72   2              printf ("TASK # %d\n", (int)os_running_task_id ());
  73   2              release_semaphore(0);
  74   2          }
  75   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    129    ----
   CONSTANT SIZE    =    197    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
