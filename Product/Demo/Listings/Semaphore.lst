C51 COMPILER V9.54   SEMAPHORE                                                             09/18/2016 22:38:19 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE SEMAPHORE
OBJECT MODULE PLACED IN .\Objects\Semaphore.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\..\Common\Semaphore.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\..\Include) 
                    -DEFINE(FOSC_221184) DEBUG OBJECTEXTEND PRINT(.\Listings\Semaphore.lst) TABS(2) OBJECT(.\Objects\Semaphore.obj)

line level    source

   1          #include <rtx51tny.h>                 /* RTX-51 tiny functions & defines      */
   2          #include "Common.h"
   3          #include "Semaphore.h"
   4          
   5          SEM_SET sem_tab[MAX_SEMAPHORES] = {0};
   6          
   7          /* 初始化信号量 */
   8          #pragma disable
   9          void init_semaphore(uint8_t sem_id, uint8_t max_count, uint8_t count)
  10          {
  11   1          sem_tab[sem_id].max_count = max_count;
  12   1          sem_tab[sem_id].count = count;
  13   1          sem_tab[sem_id].pending_tasks = 0;
  14   1      }
  15          
  16          /* 等待信号量 */
  17          #pragma disable
  18          char pend_sem(uint8_t sem_id)
  19          {
  20   1          if(sem_tab[sem_id].count > 0) 
  21   1          {
  22   2              sem_tab[sem_id].count--;      /* 获取信号量 */
  23   2              return SEM_FAIL;
  24   2          }
  25   1              
  26   1          /* 标记为等待状态 */
  27   1          sem_tab[sem_id].pending_tasks = (1 << os_running_task_id()); 
  28   1          
  29   1          return SEM_OK;
  30   1      }
  31          
  32          void pend_semaphore(uint8_t sem_id)
  33          {
  34   1          if(pend_sem(sem_id) == 0)
  35   1          {
  36   2              while(os_wait(K_TMO, 255, 0) != RDY_EVENT);    /* 等待，直到该任务就绪 */
  37   2          }
  38   1      }
  39          
  40          /* 释放信号量 */
  41          #pragma disable
  42          char release_sem(uint8_t sem_id)
  43          {
  44   1          uint8_t  i = 0;
  45   1          uint16_t temp = 1;
  46   1          
  47   1          if((sem_tab[sem_id].count > 0)||(sem_tab[sem_id].pending_tasks == 0))
  48   1          {
  49   2              sem_tab[sem_id].count++; /* 释放信号量 */
  50   2                  
  51   2              if(sem_tab[sem_id].count > sem_tab[sem_id].max_count)
  52   2              {
  53   3                  sem_tab[sem_id].count = sem_tab[sem_id].max_count;
  54   3              }
C51 COMPILER V9.54   SEMAPHORE                                                             09/18/2016 22:38:19 PAGE 2   

  55   2                      
  56   2              return SEM_FAIL;
  57   2          }
  58   1              
  59   1          for(i = 0; i < MAX_TASK; i++)
  60   1          {
  61   2              if(((sem_tab[sem_id].pending_tasks) & (temp)) != 0)
  62   2              {
  63   3                  /* 查找任务表 */
  64   3                  if(((sem_tab[sem_id].pending_tasks) & (~(1<<i))) != 0)
  65   3                  {                            
  66   4                      return (i);                                     /* 返回等待信号量的任务号 */
  67   4                  }
  68   3              }
  69   2              temp <<= 1;
  70   2          }
  71   1              
  72   1          return SEM_OK;
  73   1      }
  74          
  75          void release_semaphore(uint8_t sem_id) 
  76          {
  77   1          char task_id = 0;
  78   1          
  79   1          task_id = release_sem(sem_id);
  80   1          
  81   1          if(task_id != SEM_FAIL)
  82   1          {
  83   2              os_set_ready(task_id);  /* 任务task_id进入就绪状态 */
  84   2              os_switch_task();
  85   2          }
  86   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    324    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     12       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
